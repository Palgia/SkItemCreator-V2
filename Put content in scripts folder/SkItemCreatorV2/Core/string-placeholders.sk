#
#Replace placeholders in lore of items
#
function SKICReplaceLorePlaceholders(i: item) :: item:

    set {_lore::*} to lore of {_i}
    set {_id} to SKICInternalNameOfItem({_i})

    #Replace placeholders in lore
    loop {_lore::*}:

        if {_lore::%loop-index%} contains "{placeholder:":

            set {_line} to {_lore::%loop-index%}
            set {_split::*} to {_line} split at "{placeholder:"
            set {_split2::*} to {_split::2} split at "}"
            set {_finalsplit::*} to {_split2::1} split at ":"
            set {_placeholder-type} to {_finalsplit::1}
            set {_placeholder-value} to {_finalsplit::2}

            #
            #Stat placeholder
            #
            if {_placeholder-type} is "stat":
                parse if script "SkRPG/Main/!Main/SkRPG.sk" is loaded:
                    parse if script "SkRPG/Main/Addons/SkRPGItemsAddon.sk" is loaded:
                        set {_stat-amount} to int tag "SKRPGITEMS-%{_placeholder-value}%" of custom nbt of {_i}
                        set {_stat-line} to skRPGItemsAddonReturnStatLine({_placeholder-value}, {_stat-amount})
                        replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with {_stat-line} in {_lore::%loop-index%}

            #
            #Variable placeholder
            #
            if {_placeholder-type} is "var":
                replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with "%{%{_placeholder-value}%}%" in {_lore::%loop-index%}

            #
            #PlaceHolderAPI
            #
            if {_placeholder-type} is "papi":
                parse if plugin "PlaceholderAPI" is enabled:
                    replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with SKICGetGlobalPAPIPlaceholder({_placeholder-value}) in {_lore::%loop-index%}

            #
            #Rarity
            #
            if {_placeholder-type} is "rarity":
                replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with SKICReturnRarityLine({_placeholder-value}) in {_lore::%loop-index%}
                set string tag "SKIC-RARITY" of custom nbt of {_i} to {_placeholder-value}

            #
            #Custom damage
            #
            if {_placeholder-type} is "custom-damage":
                set {_dmg-line} to {skitemcreator.main-config::custom-damage-display}
                #Single damage
                if {skitemcreator.items.database::%{_id}%::damage} is set:
                    replace all "{damage}" with "%{skitemcreator.items.database::%{_id}%::damage}%" in {_dmg-line}
                #Ranged
                else if {skitemcreator.items.database::%{_id}%::damage::min} is set:
                    replace all "{damage}" with "%{skitemcreator.items.database::%{_id}%::damage::min}%&8-&f%{skitemcreator.items.database::%{_id}%::damage::max}%" in {_dmg-line}
                replace all "{placeholder:%{_placeholder-type}%}" with {_dmg-line} in {_lore::%loop-index%}

        #
        #Conditions
        #
        if {_placeholder-type} is "condition":
            set {_line} to {skitemcreator.main-config::conditions::%{_placeholder-value}%::lore-display}
            replace all "{value}" with "%{skitemcreator.items.database::%{_id}%::conditions::%{_placeholder-value}%::value}%" in {_line}
            replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with {_line} in {_lore::%loop-index%}

    set lore of {_i} to {_lore::*}
    return {_i}



#
#Replace placeholders in name of items
#
function SKICReplaceNamePlaceholders(i: item) :: item:

    set {_name} to name of {_i}
    set {_id} to SKICInternalNameOfItem({_i})

    #Replace placeholders in name
    if {_name} contains "{placeholder:":

        set {_line} to {_name}
        set {_split::*} to {_line} split at "{placeholder:"
        set {_split2::*} to {_split::2} split at "}"
        set {_finalsplit::*} to {_split2::1} split at ":"
        set {_placeholder-type} to {_finalsplit::1}
        set {_placeholder-value} to {_finalsplit::2}

        #
        #Stat placeholder
        #
        if {_placeholder-type} is "stat":
            parse if script "SkRPG/Main/!Main/SkRPG.sk" is loaded:
                parse if script "SkRPG/Main/Addons/SkRPGItemsAddon.sk" is loaded:
                    set {_stat-amount} to int tag "SKRPGITEMS-%{_placeholder-value}%" of custom nbt of {_i}
                    set {_stat-line} to skRPGItemsAddonReturnStatLine({_placeholder-value}, {_stat-amount})
                    replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with {_stat-line} in {_name}

        #
        #Variable placeholder
        #
        if {_placeholder-type} is "var":
            replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with "%{%{_placeholder-value}%}%" in {_name}

        #
        #PlaceHolderAPI
        #
        if {_placeholder-type} is "papi":
            parse if plugin "PlaceholderAPI" is enabled:
                replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with SKICGetGlobalPAPIPlaceholder({_placeholder-value}) in {_name}

        #
         #Rarity
        #
        if {_placeholder-type} is "rarity":
            replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with SKICReturnRarityLine({_placeholder-value}) in {_name}
            set string tag "SKIC-RARITY" of custom nbt of {_i} to {_placeholder-value}

        #
        #Custom damage
        #
        if {_placeholder-type} is "custom-damage":
            set {_dmg-line} to {skitemcreator.main-config::custom-damage-display}
            #Single damage
            if {skitemcreator.items.database::%{_id}%::damage} is set:
                replace all "{damage}" with "%{skitemcreator.items.database::%{_id}%::damage}%" in {_name}
            #Ranged
            else if {skitemcreator.items.database::%{_id}%::damage::min} is set:
                replace all "{damage}" with "&f%{skitemcreator.items.database::%{_id}%::damage::min}%&8-&f%{skitemcreator.items.database::%{_id}%::damage::max}%" in {_dmg-line}
            replace all "{placeholder:%{_placeholder-type}%}" with formatted {_dmg-line} in {_name}

        #
        #Conditions
        #
        if {_placeholder-type} is "condition":
            set {_line} to {skitemcreator.main-config::conditions::%{_placeholder-value}%::lore-display}
            replace all "{value}" with "%{skitemcreator.items.database::%{_id}%::conditions::%{_placeholder-value}%::value}%" in {_line}
            replace all "{placeholder:%{_placeholder-type}%:%{_placeholder-value}%}" with {_line} in {_name}


    set name of {_i} to {_name}
    return {_i}
              